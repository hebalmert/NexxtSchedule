@*@model IEnumerable<NexxtSchedule.Models.Client>*@

@model PagedList.IPagedList<NexxtSchedule.Models.Client>
@using PagedList.Mvc;

@{
    ViewBag.Title = @Resources.Resource.Client_IndeView_titulo1;
}
<br />
<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header"><strong>Nuevo Cliente</strong></div>
            <div class="card-body">
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-12">
                            @*<h2>@Resources.Resource.Client_IndeView_titulo1</h2>*@
                            <button title="" class="btn btn-primary btn-sm" onclick="location.href = '@Url.Action("Create", new { })'">
                                <i class="fa fa-plus"></i>
                                @Resources.Resource.ButtonNew
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        @using (Html.BeginForm("Index", "Clients"))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-8 mb-2">
                    <div class="card">
                        <div class="card-header"><strong>Buscar Cliente</strong></div>
                        <div class="card-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="col-md-12">
                                <input type="text" name="txt_search" id="txt_search" class="form-control" placeholder="Buscar Clientes" />
                                <input type="hidden" id="item_list" name="clientid" /><br />
                                <button type="submit" class="btn btn-primary btn-sm">
                                    <i class="fa fa-search"></i>
                                    @Resources.Resource.ButtonSearch
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        }
    </div>
</div>
<p></p>
<table class="table table-striped">
    <thead class="thead-light">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Cliente)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Identification.TipoDocumento)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Movil)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Address)
            </th>
            <th></th>
        </tr>
    </thead>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Cliente)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IdentificationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Movil)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Phone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Address)
            </td>
            <td>
                <button title="Editar" class="btn btn-warning btn-sm" onclick="location.href =
                   '@Url.Action("Edit", new { id = item.ClientId})'">
                    <i class="fa fa-pencil-alt"></i>
                </button>

                <button title="Detalle" class="btn btn-info btn-sm" onclick="location.href =
                   '@Url.Action("Details", new { id = item.ClientId})'">
                    <i class="fa fa-clipboard-list"></i>
                </button>

                <button title="Borrar" class="btn btn-danger btn-sm" onclick="location.href =
                   '@Url.Action("Delete", new { id = item.ClientId})'">
                    <i class="fa fa-trash"></i>
                </button>
            </td>
        </tr>
    }

</table>

@Html.PagedListPager(Model, page => Url.Action("Index", new
{
    page,
    sortOrder =
         ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    @class = "page-link"
}), new PagedListRenderOptions
{
    FunctionToTransformEachPageLink = (liTag, aTag) =>
    {
        aTag.Attributes.Add("class", "page-link");
            liTag.InnerHtml = aTag.ToString();
            return liTag;
        },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination justify-content-center" }
    })


<link href="~/Content/JquerySearch/jquery-ui.css" rel="stylesheet" />

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Content/JquerySearch/jquery-1.12.4.js"></script>
    <script src="~/Content/JquerySearch/jquery-ui.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            $("#txt_search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Clients/Search/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#item_list").val(i.item.val);
                },
                minLength: 1
            });

        });
    </script>

}
