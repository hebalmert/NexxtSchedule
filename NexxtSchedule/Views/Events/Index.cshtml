@model IEnumerable<NexxtSchedule.Models.Event>

@{
    ViewBag.Title = @Resources.Resource.Event_ViewIndex_Titulo1;
}

@*<h2> @Resources.Resource.Event_ViewIndex_Titulo1</h2>*@

<p></p>
<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><strong>Consulta de Citas</strong></div>
            <div class="panel-body">
                @using (Html.BeginForm("Index", "Events", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="row">
                        <div class="col-md-5 mb-3">
                            <label>Start</label>
                            <div class="input-group date" style="width:150px">
                                <input type="text" id="txtStart2" name="fecha" class="form-control" placeholder="Fecha" />
                                <span class="input-group-addon datepicker-decades">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </div>
                        <div class="col-md-5 mb-3">
                            <label>Profesional</label>
                            <div class="form-horizontal">
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <input type="text" name="txt_search2" id="txt_search2" class="form-control" placeholder="Profesional" />
                                        <input type="hidden" id="item_list2" name="profesionalid" /><br />
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-2 mb-3">
                            <label>ver</label>
                            <div class="form-group">
                                <button type="submit" class="btn btn-warning btn-sm">
                                    <i class="glyphicon glyphicon-search"></i>

                                </button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading"><strong>Nueva Consulta</strong></div>
            <div class="panel-body">
                @using (Html.BeginForm("Create", "Events", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-6 mb-3">

                            <label>Paciente</label>
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <div class="col-md-12">
                                        <input type="text" name="txt_search" id="txt_search" class="form-control" placeholder="Paciente nueva Cita" />
                                        <input type="hidden" id="item_list" name="clienteId" /><br />

                                        @*<button type="submit" class="btn btn-primary btn-sm">
                                            <i class="glyphicon glyphicon-plus"></i>
                                            @Resources.Resource.ButtonNew
                                        </button>*@
                                        @*<input type="submit" value="Buscar" class="btn btn-warning btn-sm" />*@
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label>Nuevo</label>
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    <div class="col-md-7">
                                        <button type="submit" class="btn btn-primary btn-sm">
                                            <i class="glyphicon glyphicon-plus"></i>
                                            @*@Resources.Resource.ButtonNew*@
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<p></p>

<div class="panel panel-default">
    <!-- Default panel contents -->
    <div class="panel-heading"><strong>Citas Agendadas</strong></div>
    @*<div class="panel-body">
            <p>...</p>
        </div>*@
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Hour.Hora)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Professional.FullName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cliente)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Subject)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                @{
                    switch (item.ColorId)
                    {
                        case 1:
                            <td>
                                <strong style="color : red">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Start))</strong>
                            </td>
                            <td>
                                <strong style="color : red">@Html.DisplayFor(modelItem => item.Hour.Hora)</strong>
                            </td>
                            <td>
                                <strong style="color : red">@Html.DisplayFor(modelItem => item.Professional.FullName)</strong>
                            </td>
                            <td>
                                <strong style="color : red">@Html.DisplayFor(modelItem => item.Cliente)</strong>
                            </td>
                            <td>
                                <strong style="color : red">@Html.DisplayFor(modelItem => item.Subject)</strong>
                            </td>
                            break;
                        case 2:
                            <td>
                                <strong style="color : blue">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Start))</strong>
                            </td>
                            <td>
                                <strong style="color : blue">@Html.DisplayFor(modelItem => item.Hour.Hora)</strong>
                            </td>
                            <td>
                                <strong style="color : blue">@Html.DisplayFor(modelItem => item.Professional.FullName)</strong>
                            </td>
                            <td>
                                <strong style="color : blue">@Html.DisplayFor(modelItem => item.Cliente)</strong>
                            </td>
                            <td>
                                <strong style="color : blue">@Html.DisplayFor(modelItem => item.Subject)</strong>
                            </td>
                            break;
                        case 3:
                            <td>
                                <strong style="color : black">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Start))</strong>
                            </td>
                            <td>
                                <strong style="color : black">@Html.DisplayFor(modelItem => item.Hour.Hora)</strong>
                            </td>
                            <td>
                                <strong style="color : black">@Html.DisplayFor(modelItem => item.Professional.FullName)</strong>
                            </td>
                            <td>
                                <strong style="color : black">@Html.DisplayFor(modelItem => item.Cliente)</strong>
                            </td>
                            <td>
                                <strong style="color : black"> @Html.DisplayFor(modelItem => item.Subject)</strong>
                            </td>
                            break;
                        case 4:
                            <td>
                                <strong style="color : green">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Start))</strong>
                            </td>
                            <td>
                                <strong style="color : green">@Html.DisplayFor(modelItem => item.Hour.Hora)</strong>
                            </td>
                            <td>
                                <strong style="color : green">@Html.DisplayFor(modelItem => item.Professional.FullName)</strong>
                            </td>
                            <td>
                                <strong style="color : green">@Html.DisplayFor(modelItem => item.Cliente)</strong>
                            </td>
                            <td>
                                <strong style="color : green">@Html.DisplayFor(modelItem => item.Subject)</strong>
                            </td>
                            break;
                        case 7:
                            <td>
                                <strong style="color : orange">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Start))</strong>
                            </td>
                            <td>
                                <strong style="color : orange">@Html.DisplayFor(modelItem => item.Hour.Hora)</strong>
                            </td>
                            <td>
                                <strong style="color : orange">@Html.DisplayFor(modelItem => item.Professional.FullName)</strong>
                            </td>
                            <td>
                                <strong style="color : orange">@Html.DisplayFor(modelItem => item.Cliente)</strong>
                            </td>
                            <td>
                                <strong style="color : orange">@Html.DisplayFor(modelItem => item.Subject)</strong>
                            </td>
                            break;
                    }
                }

            <td>
                <button title=@Resources.Resource.ButtonDetail class="btn btn-info btn-sm" onclick="location.href =
            '@Url.Action("Details", "Events", new { id = item.EventId})'">
                    <span class="glyphicon glyphicon-list"></span>
                </button>
                @if (item.Asistencia == false)
                {
                    <button title=@Resources.Resource.ButtonEdit class="btn btn-warning btn-sm" onclick="location.href =
                        '@Url.Action("Edit", "Events", new { id = item.EventId})'">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>

                    <button title=@Resources.Resource.ButtonDelete class="btn btn-danger btn-sm" onclick="location.href =
                         '@Url.Action("Delete", "Events", new { id = item.EventId})'">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>

                    <a title="Asistio" href="@Url.Action("Asistio", new { id = item.EventId })" class="btn btn-success btn-sm" onclick="return confirm('Desea Anular esta Nota Cobro?')">
                        <span class="glyphicon glyphicon-check"></span>
                    </a>
                }
            </td>
            </tr>
        }

    </table>
</div>

<link href="~/Content/bootstrap-datetimepicker.css" rel="stylesheet" />
<link href="~/Content/JquerySearch/jquery-ui.css" rel="stylesheet" />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Content/JquerySearch/jquery-1.12.4.js"></script>
    <script src="~/Content/JquerySearch/jquery-ui.js"></script>
    <script src="~/Scripts/bootstrap-datetimepicker.js"></script>

    <script>
        $('#txtStart, #txtStart2').datetimepicker({
            format: 'MM/DD/YYYY'
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            $("#txt_search").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Events/Search/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#item_list").val(i.item.val);
                },
                minLength: 1
            });

            $("#txt_search2").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Events/Search2/',
                        data: "{ 'prefix2': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#item_list2").val(i.item.val);
                },
                minLength: 1
            });

        });
    </script>

}

